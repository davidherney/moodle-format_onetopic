{"version":3,"file":"defaultsection.min.js","sources":["../src/defaultsection.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package   format_onetopic\n * @copyright 2021 David Herney Bernal - cirano\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Default section initialization.\n *\n * This will click on tab 1 to reveal its content on loading the page when the following criteria are met:\n * - section 0 is rendered above the tabs\n * - the page is called without a specific section id in the URL\n *\n * @method init\n */\nexport const init = () => {\n    // Do this only if section 0 is before the tabs and no section is already set in the URL.\n    const generalSection = document.querySelector('.general-section');\n    const currentUrl = new URL(window.location.href);\n    var params = new URLSearchParams(currentUrl.search);\n    const idValue = params.get('id');\n    const sectionValue = params.get('section');\n    if (generalSection && idValue && !sectionValue) {\n        var link = window.location + \"&section=1\";\n        var sectionId = 1;\n        // If a section is marked show this by default.\n        const marked = document.querySelector('.marker .nav-link');\n        if (marked) {\n            const url = marked.getAttribute('href');\n            link = url.split('#')[0]; // Keep only the URL w/o any anchors.\n            sectionId = link.split('section=')[1] ?? 1; // Get the section ID from the URL.\n        }\n\n        let xhrSection1 = new XMLHttpRequest();\n        xhrSection1.responseType = \"document\";\n        xhrSection1.onload = () => {\n            let doc = xhrSection1.response;\n            let tabBody = document.querySelector(\"#tabs-tree-start .onetopic-tab-body\");\n            tabBody.textContent = '';\n            tabBody.insertAdjacentHTML(\"beforeend\",\n                doc.querySelector(\"#tabs-tree-start .onetopic-tab-body\").innerHTML);\n            document.querySelector(\"a.nav-link[href*='section=\" + sectionId + \"#tabs-tree-start']\").classList.add(\"active\");\n            history.replaceState({}, \"\", xhrSection1.responseURL);\n        };\n        xhrSection1.open(\"GET\", link);\n        xhrSection1.send();\n    }\n};\n"],"names":["generalSection","document","querySelector","currentUrl","URL","window","location","href","params","URLSearchParams","search","idValue","get","sectionValue","link","sectionId","marked","getAttribute","split","xhrSection1","XMLHttpRequest","responseType","onload","doc","response","tabBody","textContent","insertAdjacentHTML","innerHTML","classList","add","history","replaceState","responseURL","open","send"],"mappings":"mKA8BoB,WAEVA,eAAiBC,SAASC,cAAc,oBACxCC,WAAa,IAAIC,IAAIC,OAAOC,SAASC,UACvCC,OAAS,IAAIC,gBAAgBN,WAAWO,cACtCC,QAAUH,OAAOI,IAAI,MACrBC,aAAeL,OAAOI,IAAI,cAC5BZ,gBAAkBW,UAAYE,aAAc,KACxCC,KAAOT,OAAOC,SAAW,aACzBS,UAAY,QAEVC,OAASf,SAASC,cAAc,wBAClCc,OAAQ,kBAERF,KADYE,OAAOC,aAAa,QACrBC,MAAM,KAAK,GACtBH,+BAAYD,KAAKI,MAAM,YAAY,wCAAM,MAGzCC,YAAc,IAAIC,eACtBD,YAAYE,aAAe,WAC3BF,YAAYG,OAAS,SACbC,IAAMJ,YAAYK,SAClBC,QAAUxB,SAASC,cAAc,uCACrCuB,QAAQC,YAAc,GACtBD,QAAQE,mBAAmB,YACvBJ,IAAIrB,cAAc,uCAAuC0B,WAC7D3B,SAASC,cAAc,6BAA+Ba,UAAY,sBAAsBc,UAAUC,IAAI,UACtGC,QAAQC,aAAa,GAAI,GAAIb,YAAYc,cAE7Cd,YAAYe,KAAK,MAAOpB,MACxBK,YAAYgB"}